(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{286:function(a,s,t){"use strict";t.r(s);var r=t(13),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"css自动换行、强制不换行、强制断行、超出显示省略号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css自动换行、强制不换行、强制断行、超出显示省略号"}},[a._v("#")]),a._v(" CSS自动换行、强制不换行、强制断行、超出显示省略号")]),a._v(" "),s("h2",{attrs:{id:"强制不换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制不换行"}},[a._v("#")]),a._v(" 强制不换行")]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" nowrap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])])]),s("h2",{attrs:{id:"自动换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动换行"}},[a._v("#")]),a._v(" 自动换行")]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("word-wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" break-word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" \n")])])]),s("h2",{attrs:{id:"强制英文单词换行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强制英文单词换行"}},[a._v("#")]),a._v(" 强制英文单词换行")]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("word-break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" break-all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("ul",[s("li",[a._v("注意：设置强制将英文单词断行，需要将行内元素设置为块级元素。")])]),a._v(" "),s("h2",{attrs:{id:"超出显示省略号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超出显示省略号"}},[a._v("#")]),a._v(" 超出显示省略号")]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("text-overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ellipsis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v("overflow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("hidden"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[a._v("white-space")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" normal | pre | nowrap | pre-wrap | pre-line | inherit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("ul",[s("li",[a._v("white-space: 属性设置如何处理元素内的空白")]),a._v(" "),s("li",[a._v("normal: 默认。空白会被浏览器忽略。")]),a._v(" "),s("li",[a._v("pre: 空白会被浏览器保留。其行为方式类似 HTML 中的 pre 标签。")]),a._v(" "),s("li",[a._v("nowrap: 文本不会换行，文本会在在同一行上继续，直到遇到 br 标签为止。")]),a._v(" "),s("li",[a._v("pre-wrap: 保留空白符序列，但是正常地进行换行。")]),a._v(" "),s("li",[a._v("pre-line: 合并空白符序列，但是保留换行符。")]),a._v(" "),s("li",[a._v("inherit: 规定应该从父元素继承 white-space 属性的值。")])]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[a._v("word-wrap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" normal | break-word"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("ul",[s("li",[a._v("word-wrap: 属性用来标明是否允许浏览器在单词内进行断句，这是为了防止当一个字符串太长而找不到它的自然断句点时产生溢出现象。")]),a._v(" "),s("li",[a._v("normal: 只在允许的断字点换行(浏览器保持默认处理)")]),a._v(" "),s("li",[a._v("break-word: 在长单词或URL地址内部进行换行")])]),a._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[a._v("word-break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" normal | break-all | keep-all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("word-break 属性用来标明怎么样进行单词内的断句。")]),a._v(" "),s("li",[a._v("normal：使用浏览器默认的换行规则。")]),a._v(" "),s("li",[a._v("break-all:允许再单词内换行")]),a._v(" "),s("li",[a._v("keep-all:只能在半角空格或连字符处换行")])])])}),[],!1,null,null,null);s.default=e.exports}}]);